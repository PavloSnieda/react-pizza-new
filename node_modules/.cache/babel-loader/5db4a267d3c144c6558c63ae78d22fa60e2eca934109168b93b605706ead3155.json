{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { useRef, useCallback } from 'react';\nfunction useLockFn(fn) {\n  var _this = this;\n  const lockRef = useRef(false);\n  return useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return __awaiter(_this, void 0, void 0, function* () {\n      if (lockRef.current) return;\n      lockRef.current = true;\n      try {\n        const ret = yield fn(...args);\n        lockRef.current = false;\n        return ret;\n      } catch (e) {\n        lockRef.current = false;\n        throw e;\n      }\n    });\n  }, [fn]);\n}\nexport default useLockFn;","map":{"version":3,"names":["__awaiter","useRef","useCallback","useLockFn","fn","lockRef","args","current","ret","e"],"sources":["/Users/pavlo/Desktop/react-pizza-main/node_modules/ahooks/es/useLockFn/index.js"],"sourcesContent":["import { __awaiter } from \"tslib\";\nimport { useRef, useCallback } from 'react';\nfunction useLockFn(fn) {\n  const lockRef = useRef(false);\n  return useCallback((...args) => __awaiter(this, void 0, void 0, function* () {\n    if (lockRef.current) return;\n    lockRef.current = true;\n    try {\n      const ret = yield fn(...args);\n      lockRef.current = false;\n      return ret;\n    } catch (e) {\n      lockRef.current = false;\n      throw e;\n    }\n  }), [fn]);\n}\nexport default useLockFn;"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAC3C,SAASC,SAAS,CAACC,EAAE,EAAE;EAAA;EACrB,MAAMC,OAAO,GAAGJ,MAAM,CAAC,KAAK,CAAC;EAC7B,OAAOC,WAAW,CAAC;IAAA,kCAAII,IAAI;MAAJA,IAAI;IAAA;IAAA,OAAKN,SAAS,CAAC,KAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,aAAa;MAC3E,IAAIK,OAAO,CAACE,OAAO,EAAE;MACrBF,OAAO,CAACE,OAAO,GAAG,IAAI;MACtB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMJ,EAAE,CAAC,GAAGE,IAAI,CAAC;QAC7BD,OAAO,CAACE,OAAO,GAAG,KAAK;QACvB,OAAOC,GAAG;MACZ,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVJ,OAAO,CAACE,OAAO,GAAG,KAAK;QACvB,MAAME,CAAC;MACT;IACF,CAAC,CAAC;EAAA,GAAE,CAACL,EAAE,CAAC,CAAC;AACX;AACA,eAAeD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}