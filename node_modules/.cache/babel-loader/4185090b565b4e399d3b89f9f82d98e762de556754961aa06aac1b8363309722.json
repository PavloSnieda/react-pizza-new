{"ast":null,"code":"var _jsxFileName = \"/Users/pavlo/Desktop/react-pizza-main/src/Pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Skeleton from '../components/PizzaBlog/Skeleton';\nimport PizzaBlog from '../components/PizzaBlog/';\nimport Categories from '../components/Сategories';\nimport Sort from '../components/Sort';\nimport Pagination from '../components/Pagination';\nimport { list } from './../components/Sort';\nimport NoContent from './../components/NoContent';\nimport qs from 'qs';\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCategoryId, setCurrentPage, setParams, selectFilter } from './../Redux/Slices/filterSlice';\nimport { fetchPizzas, selectPizza } from '../Redux/Slices/pizzaSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const isSearch = React.useRef(false);\n  const isMounter = React.useRef(false);\n  //хуки\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    sort,\n    CategoryId,\n    currentPage,\n    searchValue\n  } = useSelector(selectFilter);\n  //Данные\n  // const PizzasFilter = statePizzas.filter((obj) => obj.title.toLowerCase().includes(searchValue.toLowerCase().trim()) ? true : false)\n  const {\n    pizzas,\n    status,\n    message\n  } = useSelector(selectPizza);\n  const Pizzas = pizzas.map(obj => {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(PizzaBlog, {\n        ...obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 48\n      }, this), \" \"]\n    }, obj.id.toString(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  });\n  const SkeletonArr = [...new Array(6)].map((el, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 62\n  }, this));\n  //запросы\n  const order = sort.sortProperty.split('')[0] === '-' ? 'desc' : 'asc';\n  const sortPut = sort.sortProperty.replace('-', '');\n  const category = CategoryId > 0 ? `&category=${CategoryId}` : '';\n  const search = searchValue ? `search=${searchValue}` : '';\n  // запрос на сервер\n  async function PizzasFetch() {\n    dispatch(fetchPizzas({\n      order,\n      sortPut,\n      category,\n      search,\n      currentPage\n    }));\n    window.scrollTo(0, 0);\n  }\n  // если есть URL парсим обьект, передаем в стейт, даем запрос на сервер \n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n      dispatch(setParams({\n        ...params,\n        sort: list.find(el => el.sortProperty === params.sortProperty)\n      }));\n    }\n    isSearch.current = true; // говорим, что диспатч выполнил свою работу\n  }, []);\n\n  //если не было запроса по втановленому URL ( так как выше функция не исполнилась и не изменила на true)\n  React.useEffect(() => {\n    window.scrollBy(0, 0);\n    // выполняется толкьо после смены isSearch.current = true \n    //  если нет URL вставленого, то отправляем запрос по дефолту с инишелСтейт\n    if (!isSearch.current) {\n      PizzasFetch();\n    }\n    isSearch.current = false;\n    // я сделал по своему так: у меня по другому не работает> оставлю на всякий \n    // если нет URL вставленого, то отправляем запрос по дефолту с инишелСтейт\n    if (window.location.search === '') {\n      PizzasFetch();\n    }\n  }, [CategoryId, sort, currentPage, searchValue]);\n  // если второй и более рендеринг - вставляем URL прийдящий с state\n  React.useEffect(() => {\n    if (isMounter.current) {\n      const queryString = qs.stringify({\n        sortProperty: sort.sortProperty,\n        CategoryId,\n        currentPage\n      });\n      navigate(`?${queryString}`);\n    }\n    isMounter.current = true;\n  }, [CategoryId, sort, currentPage]);\n  function setСategories(i) {\n    dispatch(setCategoryId(i));\n  } // или сразу можно передать в пропсы этот кол бек \n\n  function onChangeCurrent(number) {\n    dispatch(setCurrentPage(number));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__top\",\n        children: [/*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Categories, {\n          value: CategoryId,\n          onClickCategories: setСategories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"content__title\",\n        children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content__items\",\n        children: message === 'Пиц не найдено' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \\u043F\\u0438\\u0446 \\u043D\\u0435\\u0442\\u0443 \\u0443\\u0445\\u043E\\u0434\\u0438 / message: \", message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 53\n        }, this) : status === 'error' ? /*#__PURE__*/_jsxDEV(NoContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this) : status === 'pending' ? SkeletonArr : Pizzas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangeCurrent: onChangeCurrent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"bLB85ZBbNheXhk0gcDB7fizkKh4=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Skeleton","PizzaBlog","Categories","Sort","Pagination","list","NoContent","qs","useNavigate","Link","useSelector","useDispatch","setCategoryId","setCurrentPage","setParams","selectFilter","fetchPizzas","selectPizza","Home","isSearch","useRef","isMounter","navigate","dispatch","sort","CategoryId","currentPage","searchValue","pizzas","status","message","Pizzas","map","obj","id","toString","SkeletonArr","Array","el","index","order","sortProperty","split","sortPut","replace","category","search","PizzasFetch","window","scrollTo","useEffect","location","params","parse","substring","find","current","scrollBy","queryString","stringify","setСategories","i","onChangeCurrent","number"],"sources":["/Users/pavlo/Desktop/react-pizza-main/src/Pages/Home.jsx"],"sourcesContent":["import React from \"react\";\nimport Skeleton from '../components/PizzaBlog/Skeleton';\nimport PizzaBlog from '../components/PizzaBlog/';\nimport Categories from '../components/Сategories';\nimport Sort from '../components/Sort';\nimport Pagination from '../components/Pagination'\nimport { list } from './../components/Sort'\nimport NoContent from './../components/NoContent'\nimport qs from 'qs'\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setCategoryId, setCurrentPage, setParams, selectFilter, } from './../Redux/Slices/filterSlice'\nimport { fetchPizzas, selectPizza } from '../Redux/Slices/pizzaSlice'\n\nfunction Home() {\n    const isSearch = React.useRef(false)\n    const isMounter = React.useRef(false)\n    //хуки\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const { sort, CategoryId, currentPage, searchValue } = useSelector(selectFilter)\n    //Данные\n    // const PizzasFilter = statePizzas.filter((obj) => obj.title.toLowerCase().includes(searchValue.toLowerCase().trim()) ? true : false)\n    const { pizzas, status, message } = useSelector(selectPizza)\n    const Pizzas = pizzas.map((obj) => {\n        return <Link key={obj.id.toString()} > <PizzaBlog {...obj} /> </Link>\n    })\n    const SkeletonArr = [...new Array(6)].map((el, index) => < Skeleton key={index} />)\n    //запросы\n    const order = sort.sortProperty.split('')[0] === '-' ? 'desc' : 'asc';\n    const sortPut = sort.sortProperty.replace('-', '');\n    const category = CategoryId > 0 ? `&category=${CategoryId}` : '';\n    const search = searchValue ? `search=${searchValue}` : ''\n    // запрос на сервер\n    async function PizzasFetch() {\n        dispatch(fetchPizzas({\n            order,\n            sortPut,\n            category,\n            search,\n            currentPage\n        }))\n        window.scrollTo(0, 0)\n    }\n    // если есть URL парсим обьект, передаем в стейт, даем запрос на сервер \n    React.useEffect(() => {\n        if (window.location.search) {\n            const params = qs.parse(window.location.search.substring(1))\n            dispatch(setParams({\n                ...params,\n                sort: list.find((el) => el.sortProperty === params.sortProperty)\n            }))\n        }\n        isSearch.current = true // говорим, что диспатч выполнил свою работу\n    }, [])\n\n    //если не было запроса по втановленому URL ( так как выше функция не исполнилась и не изменила на true)\n    React.useEffect(() => {\n        window.scrollBy(0, 0)\n        // выполняется толкьо после смены isSearch.current = true \n        //  если нет URL вставленого, то отправляем запрос по дефолту с инишелСтейт\n        if (!isSearch.current) {\n            PizzasFetch()\n        }\n        isSearch.current = false\n        // я сделал по своему так: у меня по другому не работает> оставлю на всякий \n        // если нет URL вставленого, то отправляем запрос по дефолту с инишелСтейт\n        if (window.location.search === '') {\n            PizzasFetch()\n        }\n\n    }, [CategoryId, sort, currentPage, searchValue])\n    // если второй и более рендеринг - вставляем URL прийдящий с state\n    React.useEffect(() => {\n        if (isMounter.current) {\n            const queryString = qs.stringify({\n                sortProperty: sort.sortProperty,\n                CategoryId,\n                currentPage\n            })\n            navigate(`?${queryString}`)\n        }\n        isMounter.current = true\n    }, [CategoryId, sort, currentPage])\n\n    function setСategories(i) {\n        dispatch(setCategoryId(i))\n    } // или сразу можно передать в пропсы этот кол бек \n\n    function onChangeCurrent(number) {\n        dispatch(setCurrentPage(number))\n    }\n\n    return (\n        <div className=\"container\">\n            <div>\n                <div className=\"content__top\">\n                    <Sort />\n                    <Categories value={CategoryId} onClickCategories={setСategories} />\n                </div>\n                <h2 className=\"content__title\">Все пиццы</h2>\n                <div className=\"content__items\">\n                    {message === 'Пиц не найдено' ? <div> пиц нету уходи / message: {message} </div> :\n                        status === 'error' ?\n                            <NoContent /> : status === 'pending' ? SkeletonArr : Pizzas}\n                </div>\n            </div>\n            <Pagination currentPage={currentPage} onChangeCurrent={onChangeCurrent} />\n        </div>\n    )\n}\n\nexport default Home"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}