{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pavlo/Desktop/react-pizza-main/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/pavlo/Desktop/react-pizza-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import axios from'axios';var TypeStatus;(function(TypeStatus){TypeStatus[\"LOADING\"]=\"pending\";TypeStatus[\"SUCCESS\"]=\"success\";TypeStatus[\"ERROR\"]=\"error\";})(TypeStatus||(TypeStatus={}));var fetchPizzas=createAsyncThunk('pizza/fetchPizzasByIdStatus',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref,thunkAPI){var order,sortPut,category,search,currentPage,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:order=_ref.order,sortPut=_ref.sortPut,category=_ref.category,search=_ref.search,currentPage=_ref.currentPage;_context.next=3;return axios.get(\"https://63a4cc372a73744b00802459.mockapi.io/items?page=\".concat(currentPage,\"&limit=4\").concat(category,\"&sortPut=\").concat(sortPut,\"&order=\").concat(order,\"&\").concat(search));case 3:res=_context.sent;if(!(res.data.length<1)){_context.next=8;break;}return _context.abrupt(\"return\",thunkAPI.fulfillWithValue({data:[],message:'Пиц не найдено'}));case 8:return _context.abrupt(\"return\",thunkAPI.fulfillWithValue({data:res.data,message:'запрос успешный'}));case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}());var initialState={pizzas:[],status:'pending',message:''};var pizzaSlice=createSlice({name:'pizzas',initialState:initialState,reducers:{setPizza:function setPizza(state,action){// @ts-ignore\nstate.pizzas=fetchPizzas(action.payload);}},extraReducers:function extraReducers(builder){// Add reducers for additional action types here, and handle loading state as needed\nbuilder.addCase(fetchPizzas.pending,function(state){// pending state doesn't det payload anyway ! That's ridiculous !\nstate.status=TypeStatus.LOADING;state.message='ожидание запроса';});builder.addCase(fetchPizzas.fulfilled,function(state,action){state.pizzas=action.payload.data;state.message=action.payload.message;state.status=TypeStatus.SUCCESS;});builder.addCase(fetchPizzas.rejected,function(state){state.pizzas=[];state.status=TypeStatus.ERROR;state.message='Ошибка запроса';});}});export var selectPizza=function selectPizza(state){return state.pizza;};export{fetchPizzas};var setPizza=pizzaSlice.actions.setPizza;export{setPizza};export default pizzaSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","TypeStatus","fetchPizzas","thunkAPI","order","sortPut","category","search","currentPage","get","res","data","length","fulfillWithValue","message","initialState","pizzas","status","pizzaSlice","name","reducers","setPizza","state","action","payload","extraReducers","builder","addCase","pending","LOADING","fulfilled","SUCCESS","rejected","ERROR","selectPizza","pizza","actions","reducer"],"sources":["/Users/pavlo/Desktop/react-pizza-main/src/Redux/Slices/pizzaSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { RootState } from '../store'\n\n// вместо ипрта я заново создаю\nexport type SortType = {\n    name: string,\n    sortProperty: string\n}\n\nenum TypeStatus {\n    LOADING = 'pending',\n    SUCCESS = 'success',\n    ERROR = 'error'\n}\n\ntype PizzaType = {\n    category: number,\n    id: number,\n    imageUrl: string,\n    price: number,\n    rating: number // сумневаюсь\n    sizes: number[],\n    title: string,\n    types: number,\n}\n\ninterface InterfaceInitialPizzas {\n    pizzas: PizzaType[],\n    status: 'pending' | 'success' | 'error',\n    message: string\n}\n\ninterface InterfaceFetchPizzas {\n    order: string,\n    sortPut: SortType,\n    category: string,\n    search: string,\n    currentPage: number\n}\ninterface ResType {\n    data: PizzaType[],\n    message: string\n}\n\n\n\nconst fetchPizzas = createAsyncThunk<ResType, InterfaceFetchPizzas>('pizza/fetchPizzasByIdStatus',\n    async ({ order, sortPut, category, search, currentPage }, thunkAPI) => {\n\n        const res = await axios.get(`https://63a4cc372a73744b00802459.mockapi.io/items?page=${currentPage}&limit=4${category}&sortPut=${sortPut}&order=${order}&${search}`)\n\n        if (res.data.length < 1) {\n            return thunkAPI.fulfillWithValue({ data: [], message: 'Пиц не найдено', } as ResType)\n        }\n        // if (res.data === undefined) {\n        //     return thunkAPI.rejectWithValue({ message: 'Ошибка запроса' })\n        // }\n        else {\n            return thunkAPI.fulfillWithValue({ data: res.data, message: 'запрос успешный' } as ResType)\n        }\n    },\n\n)\n\nconst initialState: InterfaceInitialPizzas = {\n    pizzas: [],\n    status: 'pending',\n    message: ''\n}\n\nconst pizzaSlice = createSlice({\n    name: 'pizzas',\n    initialState,\n    reducers: {\n\n        setPizza(state, action: PayloadAction<PizzaType[]>) {\n            // @ts-ignore\n            state.pizzas = fetchPizzas(action.payload)\n        }\n    },\n    extraReducers: (builder) => {\n        // Add reducers for additional action types here, and handle loading state as needed\n        builder.addCase(fetchPizzas.pending, (state) => {\n            // pending state doesn't det payload anyway ! That's ridiculous !\n            state.status = TypeStatus.LOADING\n            state.message = 'ожидание запроса'\n        })\n        builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n            state.pizzas = action.payload.data\n            state.message = action.payload.message\n            state.status = TypeStatus.SUCCESS\n        });\n        builder.addCase(fetchPizzas.rejected, (state,) => {\n            state.pizzas = []\n            state.status = TypeStatus.ERROR\n            state.message = 'Ошибка запроса'\n        });\n    },\n})\n\nexport const selectPizza = (state: RootState) => state.pizza\n\nexport { fetchPizzas }\nexport const { setPizza, } = pizzaSlice.actions\nexport default pizzaSlice.reducer\n"],"mappings":"sQAAA,OAASA,WAAW,CAAEC,gBAAgB,KAAuB,kBAAkB,CAC/E,MAAOC,MAAK,KAAM,OAAO,IASpBC,WAAU,WAAVA,UAAU,EAAVA,UAAU,sBAAVA,UAAU,sBAAVA,UAAU,qBAAVA,UAAU,GAAVA,UAAU,MAqCf,GAAMC,YAAW,CAAGH,gBAAgB,CAAgC,6BAA6B,6FAC7F,sBAA0DI,QAAQ,sKAAzDC,KAAK,MAALA,KAAK,CAAEC,OAAO,MAAPA,OAAO,CAAEC,QAAQ,MAARA,QAAQ,CAAEC,MAAM,MAANA,MAAM,CAAEC,WAAW,MAAXA,WAAW,uBAEhCR,MAAK,CAACS,GAAG,kEAA2DD,WAAW,oBAAWF,QAAQ,qBAAYD,OAAO,mBAAUD,KAAK,aAAIG,MAAM,EAAG,QAA7JG,GAAG,oBAELA,GAAG,CAACC,IAAI,CAACC,MAAM,CAAG,CAAC,0DACZT,QAAQ,CAACU,gBAAgB,CAAC,CAAEF,IAAI,CAAE,EAAE,CAAEG,OAAO,CAAE,gBAAkB,CAAC,CAAY,yCAM9EX,QAAQ,CAACU,gBAAgB,CAAC,CAAEF,IAAI,CAAED,GAAG,CAACC,IAAI,CAAEG,OAAO,CAAE,iBAAkB,CAAC,CAAY,wDAElG,oEAEJ,CAED,GAAMC,aAAoC,CAAG,CACzCC,MAAM,CAAE,EAAE,CACVC,MAAM,CAAE,SAAS,CACjBH,OAAO,CAAE,EACb,CAAC,CAED,GAAMI,WAAU,CAAGpB,WAAW,CAAC,CAC3BqB,IAAI,CAAE,QAAQ,CACdJ,YAAY,CAAZA,YAAY,CACZK,QAAQ,CAAE,CAENC,QAAQ,mBAACC,KAAK,CAAEC,MAAkC,CAAE,CAChD;AACAD,KAAK,CAACN,MAAM,CAAGd,WAAW,CAACqB,MAAM,CAACC,OAAO,CAAC,CAC9C,CACJ,CAAC,CACDC,aAAa,CAAE,uBAACC,OAAO,CAAK,CACxB;AACAA,OAAO,CAACC,OAAO,CAACzB,WAAW,CAAC0B,OAAO,CAAE,SAACN,KAAK,CAAK,CAC5C;AACAA,KAAK,CAACL,MAAM,CAAGhB,UAAU,CAAC4B,OAAO,CACjCP,KAAK,CAACR,OAAO,CAAG,kBAAkB,CACtC,CAAC,CAAC,CACFY,OAAO,CAACC,OAAO,CAACzB,WAAW,CAAC4B,SAAS,CAAE,SAACR,KAAK,CAAEC,MAAM,CAAK,CACtDD,KAAK,CAACN,MAAM,CAAGO,MAAM,CAACC,OAAO,CAACb,IAAI,CAClCW,KAAK,CAACR,OAAO,CAAGS,MAAM,CAACC,OAAO,CAACV,OAAO,CACtCQ,KAAK,CAACL,MAAM,CAAGhB,UAAU,CAAC8B,OAAO,CACrC,CAAC,CAAC,CACFL,OAAO,CAACC,OAAO,CAACzB,WAAW,CAAC8B,QAAQ,CAAE,SAACV,KAAK,CAAM,CAC9CA,KAAK,CAACN,MAAM,CAAG,EAAE,CACjBM,KAAK,CAACL,MAAM,CAAGhB,UAAU,CAACgC,KAAK,CAC/BX,KAAK,CAACR,OAAO,CAAG,gBAAgB,CACpC,CAAC,CAAC,CACN,CACJ,CAAC,CAAC,CAEF,MAAO,IAAMoB,YAAW,CAAG,QAAdA,YAAW,CAAIZ,KAAgB,QAAKA,MAAK,CAACa,KAAK,GAE5D,OAASjC,WAAW,EACb,GAAQmB,SAAQ,CAAMH,UAAU,CAACkB,OAAO,CAAhCf,QAAQ,CAAwB,iBAC/C,cAAeH,WAAU,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}